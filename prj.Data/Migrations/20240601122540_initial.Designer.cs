// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prj.Data.Context;

#nullable disable

namespace prj.Data.Migrations
{
    [DbContext(typeof(prjDbContext))]
    [Migration("20240601122540_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("prj.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phone"
                        });
                });

            modelBuilder.Entity("prj.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "iPhone 12",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Samsung Galaxy S21",
                            Price = 899.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Google Pixel 5",
                            Price = 699.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Sony PlayStation 5",
                            Price = 499.99m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Xbox Series X",
                            Price = 499.99m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "Nintendo Switch",
                            Price = 299.99m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Name = "Apple AirPods Pro",
                            Price = 249.99m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Name = "Samsung 4K Smart TV",
                            Price = 1499.99m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Name = "Dell XPS 13 Laptop",
                            Price = 1299.99m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Name = "Logitech G502 Gaming Mouse",
                            Price = 79.99m
                        });
                });

            modelBuilder.Entity("prj.Models.Product", b =>
                {
                    b.HasOne("prj.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("prj.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
